- name: setup couchdb cluster | Enable Cluster
  become: yes
  uri:
    url: http://{{ansible_host}}:5984/_cluster_setup
    status_code: 201
    method: POST
    user: "{{ couchdb_user }}"
    password:  "{{ couchdb_pass }}"
    force_basic_auth: yes
    return_content: yes
    body_format: json
    body: "{\"action\": \"enable_cluster\", \"bind_address\":\"0.0.0.0\",\
             \"username\": \"{{ couchdb_user }}\", \"password\":\"{{ couchdb_pass }}\", \"port\": \"5984\",\
             \"remote_node\": \"{{ hostvars[item].docker_container_names }}\", \"node_count\": \"3\",\
             \"remote_current_user\":\"{{ couchdb_user }}\", \"remote_current_password\":\"{{ couchdb_pass }}\"}"
    headers:
      Content-Type: "application/json"
  loop: "{{ groups['workers'] }}"

- name: setup couchdb cluster | Add Node
  become: yes
  uri:
    url: http://{{ansible_host}}:5984/_cluster_setup
    status_code: 201,409
    method: POST
    user: "{{ couchdb_user }}"
    password:  "{{ couchdb_pass }}"
    force_basic_auth: yes
    return_content: yes
    body_format: json
    body: "{\"action\": \"add_node\", \"host\":\"{{ hostvars[item].docker_container_names }}\",\
             \"port\": \"5984\", \"username\": \"{{ couchdb_user }}\", \"password\":\"{{ couchdb_pass }}\"}"
    headers:
      Content-Type: "application/json"
  loop: "{{ groups['workers'] }}"
  register: join_res
  until: join_res.status == 201
  retries: 60
  delay: 2

- name: setup couchdb cluster | Check Availability
  become: yes
  uri:
    url: http://{{ansible_host}}:5984/
    status_code: 200,201,409
    method: GET
    user: "{{ couchdb_user }}"
    password:  "{{ couchdb_pass }}"
    force_basic_auth: yes
    return_content: yes


- name: steup couchdb cluster | Finish Cluster
  become: yes
  uri:
    url: http://{{ansible_host}}:5984/_cluster_setup
    status_code: 201
    method: POST
    user: "{{ couchdb_user }}"
    password:  "{{ couchdb_pass }}"
    force_basic_auth: yes
    return_content: yes
    body_format: json
    body: "{\"action\": \"finish_cluster\"}"
    headers:
      Content-Type: "application/json"
  register: cl_finish

- name: Create _users DB 
  become: yes
  uri:
    url: http://{{ansible_host}}:5984/_users
    status_code: 201
    method: PUT
    user: "{{ couchdb_user }}"
    password:  "{{ couchdb_pass }}"
    force_basic_auth: yes
    return_content: yes
    headers:
      Content-Type: "application/json"
  when: cl_finish.status != 201

- name: Create _replicator DB 
  become: yes
  uri:
    url: http://{{ansible_host}}:5984/_replicator
    status_code: 201
    method: PUT
    user: "{{ couchdb_user }}"
    password:  "{{ couchdb_pass }}"
    force_basic_auth: yes
    return_content: yes
    headers:
      Content-Type: "application/json"
  when: cl_finish.status != 201
